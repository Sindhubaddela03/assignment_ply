
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'FOR ID LBRACE LPAREN RBRACE RPAREN SEMI\n    statement : FOR LPAREN ID SEMI ID SEMI ID RPAREN LBRACE RBRACE\n    '
    
_lr_action_items = {'FOR':([0,],[2,]),'$end':([1,11,],[0,-1,]),'LPAREN':([2,],[3,]),'ID':([3,5,7,],[4,6,8,]),'SEMI':([4,6,],[5,7,]),'RPAREN':([8,],[9,]),'LBRACE':([9,],[10,]),'RBRACE':([10,],[11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> FOR LPAREN ID SEMI ID SEMI ID RPAREN LBRACE RBRACE','statement',10,'p_for_loop','forloop_lex.py',37),
]
